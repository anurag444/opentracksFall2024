

buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.6.1'
    }

}

plugins {
    id "org.sonarqube" version "5.1.0.4882"
    id "pmd"
}
apply plugin: 'com.android.application'

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}


apply plugin: 'com.android.application'


def getVersionName = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--tags'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    } catch (ignored) {
        return null
    }
}

def getVersionCode = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-list', 'HEAD', '--count'
            standardOutput = stdout
        }
        return Integer.valueOf(stdout.toString().trim())
    } catch (ignored) {
        return null
    }
}

android {
    compileOptions {
        coreLibraryDesugaringEnabled true

        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    compileSdk 35

    buildFeatures {
        viewBinding true
        buildConfig true
    }

    androidResources {
        generateLocaleConfig = true
    }

    defaultConfig {
        applicationId "de.dennisguse.opentracks"
        versionCode 5870
        versionName "v4.13.1"

        buildConfigField "String", "VERSION_NAME_FULL", "\"${getVersionName()}\""

        minSdk 26
        targetSdk 35

        testInstrumentationRunner "de.dennisguse.opentracks.TestRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }

    signingConfigs {
        nightly {
            if (System.getProperty("nightly_store_file") != null) {
                storeFile file(System.getProperty("nightly_store_file"))
                storePassword System.getProperty("nightly_store_password")
                keyAlias System.getProperty("nightly_key_alias")
                keyPassword System.getProperty("nightly_key_password")
            }
        }
    }

    namespace 'de.dennisguse.opentracks'

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }

        nightly {
            signingConfig signingConfigs.nightly
            applicationIdSuffix ".nightly"
        }

        release {
            crunchPngs false
            minifyEnabled false
        }

        releasePlayStore {
            applicationIdSuffix ".playstore"
            versionNameSuffix "-PlayStore"
            signingConfig signingConfigs.debug
        }
    }

    applicationVariants.configureEach { variant ->
        variant.resValue "string", "applicationId", variant.applicationId

        if (variant.buildType.name == 'nightly') {
            variant.outputs.configureEach {
                setVersionCodeOverride(getVersionCode())
                setVersionNameOverride(getVersionName())
                outputFileName = "${applicationId}_${variant.versionCode}.apk"
            }
        }
    }
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.2'

    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'androidx.preference:preference:1.2.1'
    implementation 'androidx.documentfile:documentfile:1.0.1'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.core:core:1.13.1'
    implementation 'androidx.core:core-splashscreen:1.0.1'
    implementation 'androidx.mediarouter:mediarouter:1.7.0'
    implementation 'androidx.core:core-location-altitude:1.0.0-alpha02'

    androidTestImplementation 'androidx.test:core:1.6.1'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test:rules:1.6.1'
    androidTestImplementation 'androidx.test:runner:1.6.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    androidTestImplementation 'org.mockito:mockito-android:5.13.0'

    androidTestUtil 'androidx.test:orchestrator:1.5.0'

}


apply plugin: 'pmd'

pmd {
    toolVersion = '6.55.0'
    consoleOutput = true
    ignoreFailures = true
}

dependencies {
    pmd 'net.sourceforge.pmd:pmd-core:6.55.0'
    pmd 'net.sourceforge.pmd:pmd-java:6.55.0'
}

task cpd {
    doLast {
        // Create directories first
        def reportsDir = new File("${buildDir}/reports/cpd")
        reportsDir.mkdirs()

        ant.taskdef(name: 'cpd',
                classname: 'net.sourceforge.pmd.cpd.CPDTask',
                classpath: configurations.pmd.asPath)

        ant.cpd(minimumTokenCount: '100',
                format: 'xml',
                outputFile: "${buildDir}/reports/cpd/cpd.xml") {
            fileset(dir: "src/main/java/de/dennisguse/opentracks") {
                include(name: "**/*.java")
                exclude(name: "**/R.java")
                exclude(name: "**/BuildConfig.java")
            }
        }
    }
}

task cpdHtml {
    dependsOn cpd
    doLast {
        ant.xslt(
                in: "${buildDir}/reports/cpd/cpd.xml",
                style: "${project.rootDir}/config/pmd/cpdhtml.xslt",
                out: "${buildDir}/reports/cpd/cpd.html"
        )
    }
}